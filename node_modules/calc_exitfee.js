// constants
var _MaxFee = 75000;

Date.isLeapYear = function (year) { 
    return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)); 
};

Date.getDaysInMonth = function (year, month) {
    return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
};

Date.prototype.isLeapYear = function () { 
    return Date.isLeapYear(this.getFullYear()); 
};

Date.prototype.getDaysInMonth = function () { 
    return Date.getDaysInMonth(this.getFullYear(), this.getMonth());
};

Date.prototype.addMonths = function (value) {
    var n = this.getDate();
    this.setDate(1);
    this.setMonth(this.getMonth() + value);
    this.setDate(Math.min(n, this.getDaysInMonth()));
    return this;
};

/*
	Salary is calculated by multiplying the amount of payments per term times the payment per term, added by a holiday percentage plus extra's.
*/
function calcYearlySalary( paymentsPerYear, salaryPerPayment, holidayPerc, fixed13thMonth, fixedOvertime, fixedShift, extraBonus )
{
	var result = paymentsPerYear * salaryPerPayment;
	if (holidayPerc > 0) result += (result * (holidayPerc/100));
	return result + fixedShift + fixed13thMonth + fixedOvertime + extraBonus; 
}

/* 
	calculates the difference of two dates in months, ignoring the days
*/
function calcDateDifference( a, b )
{
	var dateDiff = (a.getFullYear() - b.getFullYear()) * 12 + (a.getMonth() - b.getMonth());
	console.log("a.Date:" + a.getDate() + " < b.Date:" + b.getDate() + " = " + (a.getDate() < b.getDate()));
	if( a.getDate() < b.getDate() ) {
		dateDiff--;
	}
	return dateDiff;
}

function calcExitFee( paymentsPerYear, salaryPerPayment, holidayPerc, fixed13thMonth, fixedOvertime, fixedShift, extraBonus, moreThan25, birthDate, dateIn, dateOut )
{
	console.log("\n--------------------------------------------------\nNEW EXITFEE CALCULATION\n--------------------------------------------------");
	console.log("Payments per year: %s\nSalary per payment: %s\nHoliday percentage: %s\nFixed 13th month: %s\nFixed overtime: %s\nFixed shift: %s\nExtra bonus: %s\nMore than 25 employees: %s\nBirthdate: %s\nDate In: %s\nDate Out: %s", paymentsPerYear, salaryPerPayment, holidayPerc, fixed13thMonth, fixedOvertime, fixedShift, extraBonus, moreThan25, birthDate, dateIn, dateOut);
	console.log("--------------------------------------------------");
	
	// calculate the yearly salary
	var yearlySalary = calcYearlySalary( paymentsPerYear, salaryPerPayment, holidayPerc, fixed13thMonth, fixedOvertime, fixedShift, extraBonus );
	console.log("Calc: Yearly total salary: %s", yearlySalary);

	// determine relevant dates
	var date120MonthsEmployed = new Date( dateIn.getFullYear(), dateIn.getMonth() + 120, dateIn.getDay() );
	var date50YearsOld = new Date( birthDate.getFullYear() + 50, birthDate.getMonth(), birthDate.getDay() );
	var durationContract = calcDateDifference(dateOut, dateIn);

	// determine relevant amount of months	
	var partUnder120Months = (durationContract > 120 ? 120 : durationContract);
	var partMore120Months = (durationContract > 120 ? (durationContract - 120) : 0);	
	var partAfter50YearsOld = 0;
	if ( date50YearsOld < dateOut ) {
		if ( date50YearsOld < dateIn ) { 
			partAfter50YearsOld = durationContract;	
		} else {
			partAfter50YearsOld = calcDateDifference( dateOut, date50YearsOld );
		} 
	}

	console.log("Calc: Part under 120 months: " + partUnder120Months);
	console.log("Calc: Part more than 120 months: " + partMore120Months);
	console.log("Calc: Part after 50 years old: " + partAfter50YearsOld);
	console.log("Calc: Date 120 months employed: " + date120MonthsEmployed);
	console.log("Calc: Date 50 years old: " + date50YearsOld);
	console.log("Calc: Duration contract: " + durationContract);

	// calculate which scenario applies 
	console.log("Expr: date50YearsOld > dateOut: " + (date50YearsOld > dateOut));
	console.log("Expr: date50YearsOld <= date120MonthsEmployed: " + (date50YearsOld <= date120MonthsEmployed));
	console.log("Expr: moreThan25 == false: " + (moreThan25 == false));
	
	// aantal te vergoeden periodes
	var noPeriods = 0;
	
	if ( ((date50YearsOld > dateOut) || (date50YearsOld <= date120MonthsEmployed) || (moreThan25 == false)) ? false : (partMore120Months > 0 ? true : false) ) {
		// scenario 1: langer dan 120 maanden werkzaam bij een bedrijf met meer dan 25 medewerkers en na de 120e maand 50 geworden.
		console.log('Calc: SCENARIO = 1');
		noPeriodsUnder120Months = partUnder120Months;
		noPeriodsAfter120Months = partMore120Months - partAfter50YearsOld;
		noPeriodsAfter50YearsOld = partAfter50YearsOld; 
	} else if ( ((date50YearsOld <= date120MonthsEmployed) && (partMore120Months > 0) && (moreThan25 == true)) ? true : false ) {
		// scenario 2: langer dan 120 maanden werkzaam bij een bedrijf met meer dan 25 medewerkers en voor de 120e maand 50 geworden.
		console.log('Calc: SCENARIO = 2');
		noPeriodsUnder120Months = calcDateDifference( date50YearsOld, dateIn );
		noPeriodsAfter120Months = 0;
		noPeriodsAfter50YearsOld = durationContract - noPeriodsUnder120Months;
	} else if ( ((date50YearsOld > dateOut) || (moreThan25 == false)) && partMore120Months > 0 ? true : false ) {
		// scenario 3: langer dan 120 maanden werkzaam en nog geen 50 of niet meer dan 25 collega's
		console.log('Calc: SCENARIO = 3');
		noPeriodsUnder120Months = partUnder120Months;
		noPeriodsAfter120Months = partMore120Months;
		noPeriodsAfter50YearsOld = 0;
	} else if ( partMore120Months == 0 ) {
		// scenario 4: korter dan 120 maanden in dienst.
		console.log('Calc: SCENARIO = 4');
		noPeriodsUnder120Months = partUnder120Months;
		noPeriodsAfter120Months = 0;
		noPeriodsAfter50YearsOld = 0;
	} else {
		throw {message:'Error: Geen scenario gedetecteerd'};
	}

	// only pay per half year
	noPeriodsUnder120Months = Math.floor(noPeriodsUnder120Months / 6);
	noPeriodsAfter120Months = Math.floor(noPeriodsAfter120Months / 6);
	noPeriodsAfter50YearsOld = Math.floor(noPeriodsAfter50YearsOld / 6);

	// output
	console.log ("Calc: Number of periods under 120 months: " + noPeriodsUnder120Months);
	console.log ("Calc: Number of periods after 120 months: " + noPeriodsAfter120Months);
	console.log ("Calc: Number of periods after 50 years: " + noPeriodsAfter50YearsOld);

	// vergoeding per periode
	var feePerPeriodUnder120Months = (yearlySalary / 12) / 6;
	var feePerPeriodAfter120Months = (yearlySalary / 12) / 4;
	var feePerPeriodAfter50YearsOld = (yearlySalary / 12) / 2;

	// output
	console.log ("Calc: Fee per period under 120 months: " + feePerPeriodUnder120Months);
	console.log ("Calc: Fee per period after 120 months: " + feePerPeriodAfter120Months);
	console.log ("Calc: Fee per period after 50 years: " + feePerPeriodAfter50YearsOld);

	// calculation of fee
	var grossFee = noPeriodsUnder120Months * feePerPeriodUnder120Months + noPeriodsAfter120Months * feePerPeriodAfter120Months + noPeriodsAfter50YearsOld * feePerPeriodAfter50YearsOld;
	console.log ("Calc: Calculated gross fee is " + grossFee);
	if ( grossFee > _MaxFee ) {
		console.log ('Expr: Fee exceeded maximum fee of ' + _MaxFee);
		grossFee = _MaxFee;
	}
	if ( grossFee > yearlySalary ) {
		console.log ('Expr: Fee exceeded yearly salary of ' + yearlySalary);
		grossFee = yearlySalary;
	}
	console.log('FINAL: Fee is: ' + grossFee);

	console.log("\n--------------------------------------------------\nNEW KANTON CALCULATION\n--------------------------------------------------");

	// calculate the yearly salary
	var B = calcYearlySalary( paymentsPerYear, salaryPerPayment, holidayPerc, fixed13thMonth, fixedOvertime, fixedShift, extraBonus )/12;
	console.log("B: %s", B);

	// determine part under 35 years old
	var A = 0;
	var date35YearsOld = new Date( birthDate.getFullYear() + 35, birthDate.getMonth(), birthDate.getDay() );
	console.log("Date35YearsOld: %s", date35YearsOld);
	var date45YearsOld = new Date( birthDate.getFullYear() + 45, birthDate.getMonth(), birthDate.getDay() );
	console.log("Date45YearsOld: %s", date45YearsOld);
	var date55YearsOld = new Date( birthDate.getFullYear() + 55, birthDate.getMonth(), birthDate.getDay() );
	console.log("Date55YearsOld: %s", date55YearsOld);
	var partUnder35YearsOld = 0.0; 
	var partUnder45YearsOld = 0.0;
	var partUnder55YearsOld = 0.0;
	var partAbove55YearsOld = 0.0;
	var i = new Date( dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDay() );
	i.addMonths(1);
	while( i < dateOut) {
		console.log("Date: %s", i);
		if ( i < date35YearsOld ) { 
				partUnder35YearsOld += (1/12);
				console.log("35- Intermediate: %s", partUnder35YearsOld); 
			} else if ( i < date45YearsOld ) { 
				partUnder45YearsOld += (1/12); 
				console.log("45- Intermediate: %s", partUnder45YearsOld);
			} else if ( i < date55YearsOld ) {
				partUnder55YearsOld += (1/12);
				console.log("55- Intermediate: %s", partUnder55YearsOld); 
			}
			else {
				partAbove55YearsOld += (1/12);
				console.log("55+ Intermediate: %s", partAbove55YearsOld);
			}
		console.log("De maand is %s", i.getMonth());
		i.addMonths(1);
	} 
	console.log("Under 35: %s,\nUnder 45: %s,\nUnder 55: %s,\nAbove 55: %s", partUnder35YearsOld, partUnder45YearsOld, partUnder55YearsOld, partAbove55YearsOld );

	var roundedPartUnder35Year = Math.round(partUnder35YearsOld);
	var totaalAantalJaarRounded = Math.round(partUnder35YearsOld + partUnder45YearsOld + partUnder55YearsOld + partAbove55YearsOld);
	var totaalAantalRoundedJaren = Math.round(partUnder35YearsOld) + Math.round(partUnder45YearsOld) + Math.round(partUnder55YearsOld) + Math.round(partAbove55YearsOld);

	var roundedUnder35YearsOld = Math.round( partUnder35YearsOld);
	var roundedUnder45YearsOld = Math.round( partUnder45YearsOld);
	var roundedUnder55YearsOld = Math.round( partUnder55YearsOld);
	var roundedAbove55YearsOld = Math.round( partAbove55YearsOld);
	if( totaalAantalJaarRounded < totaalAantalRoundedJaren) {
		if( partUnder35YearsOld != 0 && Math.round(partUnder35YearsOld) > Math.trunc(partUnder35YearsOld) ) roundedUnder35YearsOld = Math.trunc( partUnder35YearsOld );
		else if( partUnder45YearsOld != 0 && Math.round(partUnder45YearsOld) > Math.trunc(partUnder45YearsOld) ) roundedUnder45YearsOld = Math.trunc( partUnder45YearsOld );
		else if( partUnder55YearsOld != 0 && Math.round(partUnder55YearsOld) > Math.trunc(partUnder55YearsOld) ) roundedUnder55YearsOld = Math.trunc( partUnder55YearsOld );
	} 
	console.log("Part under 35: %s, Rounded: %s", partUnder35YearsOld, roundedUnder35YearsOld);
	console.log("Part under 45: %s, Rounded: %s", partUnder45YearsOld, roundedUnder45YearsOld);
	console.log("Part under 55: %s, Rounded: %s", partUnder55YearsOld, roundedUnder55YearsOld);
	console.log("Part above 55: %s, Rounded: %s", partAbove55YearsOld, roundedAbove55YearsOld);

	A = roundedUnder35YearsOld * .5 + roundedUnder45YearsOld * 1 + roundedUnder55YearsOld * 1.5 + roundedAbove55YearsOld * 2;

	// determine relevant dates
	console.log("Calc: Duration contract: " + A);

	var C = 1.00;

	var kantonFee = A * B * C;

	// Prepare return
	var returnValues = [grossFee, kantonFee];

	return returnValues;
}

exports.calcExitFee = calcExitFee;